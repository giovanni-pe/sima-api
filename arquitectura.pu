@startuml
' SIMA-UNAS · Backend (Laravel + DDD) – Capas: Domain / Application / Infrastructure / Http
left to right direction
skinparam packageStyle rect
skinparam shadowing false
skinparam classAttributeIconVisibility false

package "Modules::Parcels" {

  package "Domain" {
    class Parcel <<Entity>> {
      id : int
      name : string
      area_m2 : float
      active : bool
      location : string?
      crop_type : string?
      latitude : float?
      longitude : float?
      user_id : int?
      created_at : datetime?
      updated_at : datetime?
    }

    interface IParcelRepository {
      +find(id:int) : Parcel?
      +save(entity:Parcel) : Parcel
      +delete(id:int) : bool
      +paginate(perPage:int, filters:array) : Page
      +active() : Parcel[]
    }

    class Page {
      data : any[]
      current_page : int
      per_page : int
      total : int
      last_page : int
    }
  }

  package "Application" {
    interface IParcelsService {
      +paginate(perPage:int, filters:array) : Page
      +find(id:int) : Parcel
      +save(parcel:Parcel) : Parcel
      +delete(id:int) : bool
      +active() : Parcel[]
    }

    class ParcelsService <<Service>> {
      -repo : IParcelRepository
    }
  }

  package "Infrastructure" {
    class ParcelModel <<Eloquent>> {
      table = "parcels"
      fillable : array
      casts : array
    }

    class ParcelRepository <<Repository>> {
      -model : ParcelModel
      -toEntity(m:ParcelModel) : Parcel
      -toModel(e:Parcel) : ParcelModel
    }
  }

  package "Http" {
    class ParcelsController <<Controller>> {
      +index(Request) : JsonResponse
      +store(CreateParcelRequest) : JsonResponse
      +show(id:int) : JsonResponse
      +update(UpdateParcelRequest, id:int) : JsonResponse
      +destroy(id:int) : JsonResponse
      +active() : JsonResponse
    }

    class ParcelDTO <<DTO>> {
      +toEntity(id:int=null) : Parcel
    }

    class CreateParcelRequest <<FormRequest>>
    class UpdateParcelRequest <<FormRequest>>
  }
}

' ===== Relaciones entre capas (sin genéricos en la firma) =====
ParcelsController --> IParcelsService : usa
ParcelsController ..> ParcelDTO
ParcelsController ..> CreateParcelRequest
ParcelsController ..> UpdateParcelRequest

ParcelsService ..|> IParcelsService
ParcelsService --> IParcelRepository : usa

ParcelRepository ..|> IParcelRepository
ParcelRepository --> ParcelModel : persiste
ParcelRepository ..> Parcel : mapea

Parcel ..> Page : «paginate()»  #hidden

' Nota visual rápida
note top of ParcelsController
  Capa HTTP
  (controladores + requests + DTOs)
end note
note top of ParcelsService
  Capa Application
  (casos de uso / orquestación)
end note
note top of ParcelRepository
  Capa Infrastructure
  (persistencia / Eloquent)
end note
note top of Parcel
  Capa Domain
  (entidades y contratos)
end note
@enduml
